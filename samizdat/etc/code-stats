#!/bin/bash
#
# Copyright 2013-2015 the Samizdat Authors (Dan Bornstein et alia).
# Licensed AS IS and WITHOUT WARRANTY under the Apache License,
# Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

#
# Generate some quick overall stats about the code.
#

#
# General setup
#

# Set `progName` to the program name, `progDir` to its directory, and `baseDir`
# to `progDir`'s directory. Follows symlinks.
function init-prog {
    local newp p="$0"

    while newp="$(readlink "$p")"; do
        [[ ${newp} =~ ^/ ]] && p="${newp}" || p="$(dirname "$p")/${newp}"
    done

    progName="${p##*/}"
    progDir="$(cd "$(dirname "$p")"; /bin/pwd -P)"
    baseDir="$(cd "${progDir}/.."; /bin/pwd -P)"
}

init-prog


#
# Helper functions
#

# Reports a line count of all files in the repo that match the given
# name (a glob pattern).
function getCount {
    local match=glob

    if [[ $1 == '--type' ]]; then
        match=type
        shift
    fi

    local pattern="$1"
    local dir="$2"

    if [[ ${dir} == '' ]]; then
        dir='.'
    fi

    local -a files

    if [[ ${match} == glob ]]; then
        files=($(find "${dir}" \
            '(' -type d -name .git -prune ')' -o \
            '(' -type d -name out -prune ')' -o \
            -name "${pattern}" -print
        ))
    else
        files=($(
            find "${dir}" \
                '(' -type d -name .git -prune ')' -o \
                '(' -type d -name out -prune ')' -o \
                -exec file '{}' ';' \
            | awk -F': ' '
                $2 ~ /'"${pattern}"'/ { print $1; }
            '
        ))
    fi

    wc -l "${files[@]}" \
    | awk '
        { count = $1; }
        END { print count; }
    '
}


#
# Main script
#

cd "${baseDir}"

docs="$(getCount '*.md')"
scripts=$(( $(getCount '*.sh') + $(getCount --type 'shell') ))
(( otherTotal = docs + scripts ))

cHeader="$(getCount '*.h' samex-naif)"
cCode="$(getCount '*.c' samex-naif)"
(( cTotal = cHeader + cCode ))

samlibCode="$(getCount '*.sam*' samlib-naif)"
demoCode="$(getCount '*.sam*' demo)"
samtocCode="$(getCount '*.sam*' samtoc)"
samTotal="$(getCount '*.sam*')"
(( otherSam = samTotal - samlibCode - demoCode - samtocCode ))

(( codeTotal = cTotal + samTotal ))
(( total = codeTotal + docs ))

(( per10k = samTotal * 10000 / codeTotal ))
(( samPercent = per10k / 100 ))
(( samPercentFrac = per10k % 100 ))

printf '\n'

printf 'C Code\n'
printf -- '----------------------\n'
printf '  Header     %5d\n' "${cHeader}"
printf '  Code       %5d\n' "${cCode}"
printf -- '  --------\n'
printf '  Total      %5d\n' "${cTotal}"
printf '\n'

printf 'Samizdat Code\n'
printf -- '----------------------\n'
printf '  Library    %5d\n' "${samlibCode}"
printf '  Samtoc     %5d\n' "${samtocCode}"
printf '  Demo       %5d\n' "${demoCode}"
printf '  Other      %5d\n' "${otherSam}"
printf -- '  --------\n'
printf '  Total      %5d\n' "${samTotal}"
printf '\n'

printf 'Other\n'
printf -- '----------------------\n'
printf '  Docs       %5d\n' "${docs}"
printf '  Scripts    %5d\n' "${scripts}"
printf -- '  --------\n'
printf '  Total      %5d\n' "${otherTotal}"
printf '\n'

printf 'Summary\n'
printf -- '----------------------\n'
printf '  Total      %5d\n' "${total}"
printf '  Code Total %5d\n' "${codeTotal}"
printf '  Sam Code %%    %2d.%02d%%\n' "${samPercent}" "${samPercentFrac}"
printf '\n'
