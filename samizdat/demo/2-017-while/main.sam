## Copyright 2013-2015 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## Loop expression demo
##


##
## Main Tests
##

var v = 0;

while (v < 5) {
    v := v + 1;
    note("Value A is \%q(v).")
};

while (v < 15) {
    v := v + 1;
    if (v < 10) {
        continue
    };
    note("Value B is \%q(v).")
};

while (v < 30) { /next ->
    v := v + 1;
    if (v < 25) {
        yield /next
    };
    note("Value C is \%q(v).")
};

def result1 = while (v < 40) {
    v := v + 1;
    if (v == 35) {
        break "blort"
    };
    note("Value D is \%q(v).")
};

note("Result 1 is \%q(result1).");

def result2 = while /out (v < 40) {
    v := v + 1;
    if (v == 38) {
        yield /out "fizmo"
    };
    note("Value E is \%q(v).")
};

note("Result 2 is \%q(result2).");

while (def value = (v < 45)) {
    def nextVal = value + 1;
    v := nextVal;
    note("Value F is \%q(nextVal).")
};

## First test will be the one that fails.
while (def value1 = (v < 50), def value2 = value1 + 100) {
    v := value1 + 1;
    note("Value G is \%q(v); \%q(value1) \%q(value2)");
};

## Second test will be the one that fails.
while (def value1 = v, def value2 = (value1 < 55)) {
    v := value1 + 1;
    note("Value H is \%q(v); \%q(value1) \%q(value2)");
};
