## Copyright 2013-2015 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## Class definition: ResolverCache
##
## Payload:
## * box -- box for map of source->info bindings
##

## Secrets used to control access to this class.
def ACCESS = @ACCESS.toUnlisted();
def NEW = @NEW.toUnlisted();

export class ResolverCache
        access: ACCESS,
        new: NEW {
    class.new() {
        var cache = {};
        return this.(NEW)(@{box: cache?})
    };

    .get(source) {
        def box = this.(ACCESS)()::box;
        return? (box*)[source]
    };

    .set(source, resolved) {
        def box = this.(ACCESS)()::box;
        def newMap = {(box*)*, (source): resolved};
        box* := newMap
    };
};
