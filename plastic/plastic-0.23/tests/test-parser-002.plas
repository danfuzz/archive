// Test file for PlasticSound
// 
// Copyright (C) 2000, Dan Bornstein, danfuzz@milk.com. All Rights 
// Reserved. (Shrill TV degreaser.)
//
// This file is part of the MILK Kodebase. The contents of this file are
// subject to the MILK Kodebase Public License; you may not use this file
// except in compliance with the License. A copy of the MILK Kodebase Public
// License has been included with this distribution, and may be found in the
// file named "LICENSE.html". You may also be able to obtain a copy of the
// License at <http://www.milk.com/kodebase/legal/LICENSE.html>. Yum!
//
// Author: Dan Bornstein, danfuzz@milk.com

a := foo (a: 10);
a1 := foo (10);
a2 := b.c;
a3 := 5 Hz * 3 + 7;
Sum1 := Sum (a: 10, b: 20);
Sum2 := Sum (a: 10, b: 20);

Sum3 := Sum (in0: # Hz, in1: # Hz);

x :=
{
    main := Main (
        iters: 20,
        count: 1,
        sink0: foo);

    foo := DebugSink (
        label: "Hi", 
        count: 3,
        in0:   wave0.out, 
        in1:   wave1.out,
        in2:   wave2.out);

    wave0 := FixedSquareWave (
        v0:    0.0,
        v1:    1.0,
        phase: 0.0,
        wlen:  2.0);

    wave1 := FixedSquareWave (
        v0:    0.0,
        v1:    1.0,
        phase: 0.0,
        wlen:  3.0);

    wave2 := FixedSquareWave (
        v0:    0.0,
        v1:    1.0,
        phase: 0.9,
        wlen:  10.0);

    :: main;
};



// all the following are equivalent

x1 := Sum (in0: # Hz, in1: # Hz);

x2 := 
{
    :: Sum (in0: # Hz, in1: # Hz);
};

x3 := 
{
    it := Sum (in0: # Hz, in1: # Hz);
    :: it;
};

x4 := 
{
    it := Sum (in0: # Hz, in1: # Hz);
    :: it;
};

x5 :=
{
    input in0 := # Hz;
    input in1 := # Hz;

    it := Sum (in0: in0, in1: in1);

    output out := it.out;
};

AddTwo :=
{
    input x := #;

    y := x + 2;

    output out := y;
};
